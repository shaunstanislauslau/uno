<?xml version="1.0" encoding="utf-8" ?>
<Project>

  <PropertyGroup>
	<T4Path>$(MSBuildThisFileDirectory)..\..\T4Generator\bin\$(Configuration)</T4Path>
	<T4Bin>$(T4Path)\T4Generator.exe</T4Bin>

	<IsMonoAndroid>$(TargetFramework.ToLower().StartsWith('monoandroid'))</IsMonoAndroid>
	<IsXamarinIOS>$(TargetFramework.ToLower().StartsWith('xamarinios'))</IsXamarinIOS>
	<IsXamarinMac>$(TargetFramework.ToLower().StartsWith('xamarinmac'))</IsXamarinMac>
  </PropertyGroup>

  <ItemGroup Condition="'$(DocsGeneration)'==''">
	<ProjectReference Include="..\T4Generator\T4Generator.csproj">
	  <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
	  <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
	  <UndefineProperties>TargetFramework</UndefineProperties>
	</ProjectReference>
  </ItemGroup>

  <ItemGroup>
	<MixinInput Include="$(MSBuildThisFileDirectory)Android\BaseActivity.Callbacks.tt" Condition="$(IsMonoAndroid)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)Android\FrameworkElementMixins.tt" Condition="$(IsMonoAndroid)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)Android\VisualStatesMixins.tt" Condition="$(IsMonoAndroid)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)DependencyPropertyMixins.tt" />
	<MixinInput Include="$(MSBuildThisFileDirectory)..\UI\Xaml\DependencyPropertiesImplementation.tt" />
	<MixinInput Include="$(MSBuildThisFileDirectory)..\UI\Xaml\Controls\VisualStatesImplementation.tt" />
	<MixinInput Include="$(MSBuildThisFileDirectory)..\UI\Xaml\IFrameworkElementImplementation.Android.tt" Condition="$(IsMonoAndroid)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)iOS\FrameworkElementMixins.tt" Condition="$(IsXamarinIOS)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)iOS\VisualStatesMixins.tt" Condition="$(IsXamarinIOS)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)macOS\FrameworkElementMixins.tt" Condition="$(IsXamarinMac)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)macOS\VisualStatesMixins.tt" Condition="$(IsXamarinMac)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)Wasm\VisualStatesMixins.tt" Condition="'$(TargetFramework)'=='netstandard2.0'" />
	<MixinInput Include="$(MSBuildThisFileDirectory)net461\VisualStatesMixins.tt" Condition="'$(TargetFramework)'=='net461'" />
	<MixinInput Include="$(MSBuildThisFileDirectory)..\UI\Xaml\IFrameworkElementImplementation.iOS.tt" Condition="$(IsXamarinIOS)" />
	<MixinInput Include="$(MSBuildThisFileDirectory)..\UI\Xaml\IFrameworkElementImplementation.macOS.tt" Condition="$(IsXamarinMac)" />

	<MixinOutput Include="$(MSBuildThisFileDirectory)Android\BaseActivity.Callbacks.g.cs" Condition="$(IsMonoAndroid)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)Android\FrameworkElementMixins.g.cs" Condition="$(IsMonoAndroid)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)Android\VisualStatesMixins.g.cs" Condition="$(IsMonoAndroid)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)DependencyPropertyMixins.g.cs" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)iOS\FrameworkElementMixins.g.cs" Condition="$(IsXamarinIOS)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)iOS\VisualStatesMixins.g.cs" Condition="$(IsXamarinIOS)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)macOS\FrameworkElementMixins.g.cs" Condition="$(IsXamarinMac)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)macOS\VisualStatesMixins.g.cs" Condition="$(IsXamarinMac)" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)Wasm\VisualStatesMixins.g.cs" Condition="'$(TargetFramework)'=='netstandard2.0'" />
	<MixinOutput Include="$(MSBuildThisFileDirectory)net461\VisualStatesMixins.g.cs" Condition="'$(TargetFramework)'=='net461'" />
  </ItemGroup>

  <!--
	DispatchToInnerBuilds is used for direct builds, CoreCompile/_UnoSourceGenerator is for 
	project dependency induced builds.
	-->
  <Target Name="GenerateMixins" Inputs="@(MixinInput)" Outputs="@(MixinOutput)" BeforeTargets="DispatchToInnerBuilds;Build;_UnoSourceGenerator" DependsOnTargets="_OptimizeT4Generator" Condition="'$(DesignTimeBuild)' != 'true'">

	<ItemGroup>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsMonoAndroid)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)Android\BaseActivity.Callbacks.tt;OutputPath=$(MSBuildThisFileDirectory)Android;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsMonoAndroid)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)Android\FrameworkElementMixins.tt;OutputPath=$(MSBuildThisFileDirectory)Android;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsMonoAndroid)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)Android\VisualStatesMixins.tt;OutputPath=$(MSBuildThisFileDirectory)Android;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)DependencyPropertyMixins.tt;OutputPath=$(MSBuildThisFileDirectory)..\Mixins;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinIOS)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)iOS\FrameworkElementMixins.tt;OutputPath=$(MSBuildThisFileDirectory)iOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinIOS)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)iOS\VisualStatesMixins.tt;OutputPath=$(MSBuildThisFileDirectory)iOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinMac)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)macOS\FrameworkElementMixins.tt;OutputPath=$(MSBuildThisFileDirectory)macOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="$(IsXamarinMac)">
		<Properties>InputFile=$(MSBuildThisFileDirectory)macOS\VisualStatesMixins.tt;OutputPath=$(MSBuildThisFileDirectory)macOS;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="'$(TargetFramework)'=='netstandard2.0'">
		<Properties>InputFile=$(MSBuildThisFileDirectory)Wasm\VisualStatesMixins.tt;OutputPath=$(MSBuildThisFileDirectory)Wasm;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	  <MixinDefinition Include="$(MSBuildThisFileFullPath)" Condition="'$(TargetFramework)'=='net461'">
		<Properties>InputFile=$(MSBuildThisFileDirectory)net461\VisualStatesMixins.tt;OutputPath=$(MSBuildThisFileDirectory)net461;Configuration=$(Configuration);Platform=$(Platform)</Properties>
	  </MixinDefinition>
	</ItemGroup>

	<Message Text="Generating mixins" Importance="high" />

	<!-- This allows for the mixins to generate in parallel -->
	<MSBuild BuildInParallel="true" Projects="@(MixinDefinition)" StopOnFirstFailure="True" Targets="_InnerGenerateMixins" />

	<ItemGroup>
	  <!--
	  Restore the compile items for projects using globbing
	  that may not have the .cs files as explicit Compile items
	  -->
	  <Compile Remove="$(MSBuildThisFileDirectory)**/*.cs" />
	  <Compile Include="$(MSBuildThisFileDirectory)**/*.cs" />
	</ItemGroup>
  </Target>

  <Target Name="_OptimizeT4Generator" Condition="$([MSBuild]::IsOSUnixLike())">
	<ItemGroup>
	  <_T4AOTFiles Include="$(T4Path)/*.dll" Exclude="$(T4Path)/System.Text.Encoding.CodePages.dll" />
	</ItemGroup>

	<Exec ContinueOnError="WarnAndContinue" Command="mono --aot &quot;$(T4Bin)&quot;" Condition="!exists('$(T4Bin).dylib')" />
	<Exec ContinueOnError="WarnAndContinue" Command="mono --aot &quot;%(_T4AOTFiles.Identity)&quot;" Condition="!exists('%(_T4AOTFiles.Identity).dylib')" />
  </Target>

  <Target Name="_InnerGenerateMixins">
	<Exec Command="&quot;$(T4Bin)&quot; $(InputFile) $(OutputPath)" />
  </Target>
</Project>
